{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAIlB,SAEI,uBACIO,KAAK,OAAOC,MAAOT,EACnBU,SAhBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OACI,sBAAKC,UAAY,0CAAjB,UACI,qBAAKC,IAAMF,EAAKG,IAAMJ,IACtB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,kDAEmCO,UAAUF,GAF7C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHhB,GAAKgB,EAAIhB,GACTC,MAAQe,EAAIf,MACZC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAGrB,ECJwB,SAACA,GACzB,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAbAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAACC,GAEpBH,EAAS,CACTT,KAAMY,EACNL,SAAQ,SAOd,CAACb,IACIc,EDduBK,CAAanB,GAA/BU,EAAZ,EAAOJ,KAAYO,EAAnB,EAAmBA,QAEnB,OACI,qCACA,oBAAIjB,UAAU,yCAAd,SAAwDI,IACvDa,GAAW,mBAAGjB,UAAU,wCAAb,qBACZ,qBAAKA,UAAY,YAAjB,SAGQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAAgCA,GAAZA,EAAIhB,aEZ/B2B,EAAe,WAGxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ2C,EAAWb,KAAI,SAACR,GAAD,OACX,cAAC,EAAD,CAA0BA,SAAYA,GAAtBA,YCnBxCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1495b86e.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState(\"\");\n    const handleInputChange = (e) =>{\n        // console.log(e.target.value);\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2){\n            setCategories(cats => [inputValue,...cats]);\n            setInputValue(\"\");\n        }\n    }\n    return (\n        <form onSubmit = {handleSubmit}>\n            \n            <input \n                type=\"text\" value={inputValue}\n                onChange={handleInputChange}\n                >\n                \n            </input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    \n    return (\n        <div className = \"card animate__animated animate__bounce \">\n            <img src= {url} alt= {title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","export const getGifs = async(category) => {\n\n    const url =` https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=R7Hg66FAZfrapmNX0ZTCRUvR7g9XM2Zo`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(img=>{\n        return {\n            id : img.id,\n            title : img.title,\n            url: img.images?.downsized_medium.url\n        }\n\n    })\n    return gifs;\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({category}) => {\n\n    // const [images, setImages] = useState([]);\n    const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n        <h3 className=\"card animate__animated animate__fadeIn\">{category}</h3>\n        {loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\n        <div className = \"card-grid\">\n           \n            {\n                images.map(img =>(\n                    <GifGridItem key = {img.id} {...img}/>\n               \n                ) )\n            }\n            \n        </div>\n\n        </>\n    )\n}\n","import { useState,useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading : true\n    })\n    useEffect(() => {\n        getGifs(category).then((imgs) => {\n         \n            setstate({\n            data: imgs,\n            loading:false\n            });\n\n    \n        })   \n   \n        \n    },[category])\n    return state\n}\n","\nimport React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['one','two','three'];\n    const [categories, setCategories] = useState(['one Punch']);\n\n    // const handleAdd = () =>{\n    //     setCategories([...categories,'four'])\n    // }\n\n    return (\n        <div>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr></hr>\n            {/* <button onClick={handleAdd}> Agregar </button> */}\n\n            <ol>\n                {\n                    categories.map((category) =>(\n                        <GifGrid key = {category} category = {category}/>\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}